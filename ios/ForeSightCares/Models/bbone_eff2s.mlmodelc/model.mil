program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1429.0.0"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 256, 256]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 256, 256]> image__scaled__ = mul(x = image, y = image__scaled___y_0);
            tensor<string, []> efficientnetv2_s_stem_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_stem_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_0_pad_0 = const()[name = tensor<string, []>("pad_0_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, []> efficientnetv2_s_stem_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_stem_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 3, 256, 256]> cast_541 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__);
            tensor<fp16, [1, 3, 258, 258]> pad_0_cast = pad(constant_val = efficientnetv2_s_stem_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_stem_Pad_mode_0, pad = pad_0_pad_0, x = cast_541);
            tensor<string, []> efficientnetv2_s_stem_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_stem_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_stem_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_stem_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> efficientnetv2_s_stem_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_stem_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_stem_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_stem_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_stem_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_stem_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [24, 3, 3, 3]> efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [24, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [24]> efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1472)))];
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_stem_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_stem_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_stem_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_stem_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_stem_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_0_cast);
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_stem_mul_1_cast = silu(x = efficientnetv2_s_stem_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_0_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_1_pad_0 = const()[name = tensor<string, []>("pad_1_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_0_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 24, 130, 130]> pad_1_cast = pad(constant_val = efficientnetv2_s_blocks_0_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_0_Pad_mode_0, pad = pad_1_pad_0, x = efficientnetv2_s_stem_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_0_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_0_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_0_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_0_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_0_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [24, 24, 3, 3]> efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [24, 24, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1600)))];
            tensor<fp16, [24]> efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12032)))];
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_0_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_0_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_0_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_0_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_0_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_1_cast);
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_blocks_0_mul_1_cast = silu(x = efficientnetv2_s_blocks_0_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_blocks_0_Add_cast = add(x = efficientnetv2_s_blocks_0_mul_1_cast, y = efficientnetv2_s_stem_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_1_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_2_pad_0 = const()[name = tensor<string, []>("pad_2_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_1_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 24, 130, 130]> pad_2_cast = pad(constant_val = efficientnetv2_s_blocks_1_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_1_Pad_mode_0, pad = pad_2_pad_0, x = efficientnetv2_s_blocks_0_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_1_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_1_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_1_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_1_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_1_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [24, 24, 3, 3]> efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [24, 24, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12160)))];
            tensor<fp16, [24]> efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22592)))];
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_1_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_1_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_1_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_1_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_1_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_2_cast);
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_blocks_1_mul_1_cast = silu(x = efficientnetv2_s_blocks_1_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 24, 128, 128]> efficientnetv2_s_blocks_1_Add_cast = add(x = efficientnetv2_s_blocks_1_mul_1_cast, y = efficientnetv2_s_blocks_0_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_2_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_3_pad_0 = const()[name = tensor<string, []>("pad_3_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_2_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 24, 130, 130]> pad_3_cast = pad(constant_val = efficientnetv2_s_blocks_2_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_2_Pad_mode_0, pad = pad_3_pad_0, x = efficientnetv2_s_blocks_1_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_2_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_2_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> efficientnetv2_s_blocks_2_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_2_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_2_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [96, 24, 3, 3]> efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [96, 24, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22720)))];
            tensor<fp16, [96]> efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64256)))];
            tensor<fp16, [1, 96, 64, 64]> efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_2_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_2_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_2_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_2_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_2_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_3_cast);
            tensor<fp16, [1, 96, 64, 64]> efficientnetv2_s_blocks_2_mul_1_cast = silu(x = efficientnetv2_s_blocks_2_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [48, 96, 1, 1]> efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [48, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64512)))];
            tensor<fp16, [48]> efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73792)))];
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_2_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_2_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_3_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_4_pad_0 = const()[name = tensor<string, []>("pad_4_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_3_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 48, 66, 66]> pad_4_cast = pad(constant_val = efficientnetv2_s_blocks_3_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_3_Pad_mode_0, pad = pad_4_pad_0, x = efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_3_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_3_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_3_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_3_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_3_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [192, 48, 3, 3]> efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [192, 48, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73984)))];
            tensor<fp16, [192]> efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(239936)))];
            tensor<fp16, [1, 192, 64, 64]> efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_3_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_3_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_3_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_3_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_3_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_4_cast);
            tensor<fp16, [1, 192, 64, 64]> efficientnetv2_s_blocks_3_mul_1_cast = silu(x = efficientnetv2_s_blocks_3_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [48, 192, 1, 1]> efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [48, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(240384)))];
            tensor<fp16, [48]> efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258880)))];
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_3_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_3_mul_1_cast);
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_3_Add_cast = add(x = efficientnetv2_s_blocks_3_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_2_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_4_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_5_pad_0 = const()[name = tensor<string, []>("pad_5_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_4_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 48, 66, 66]> pad_5_cast = pad(constant_val = efficientnetv2_s_blocks_4_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_4_Pad_mode_0, pad = pad_5_pad_0, x = efficientnetv2_s_blocks_3_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_4_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_4_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_4_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_4_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_4_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [192, 48, 3, 3]> efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [192, 48, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(259072)))];
            tensor<fp16, [192]> efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(425024)))];
            tensor<fp16, [1, 192, 64, 64]> efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_4_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_4_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_4_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_4_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_4_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_5_cast);
            tensor<fp16, [1, 192, 64, 64]> efficientnetv2_s_blocks_4_mul_1_cast = silu(x = efficientnetv2_s_blocks_4_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [48, 192, 1, 1]> efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [48, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(425472)))];
            tensor<fp16, [48]> efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(443968)))];
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_4_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_4_mul_1_cast);
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_4_Add_cast = add(x = efficientnetv2_s_blocks_4_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_3_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_5_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_6_pad_0 = const()[name = tensor<string, []>("pad_6_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_5_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 48, 66, 66]> pad_6_cast = pad(constant_val = efficientnetv2_s_blocks_5_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_5_Pad_mode_0, pad = pad_6_pad_0, x = efficientnetv2_s_blocks_4_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_5_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_5_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_5_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_5_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_5_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [192, 48, 3, 3]> efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [192, 48, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(444160)))];
            tensor<fp16, [192]> efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(610112)))];
            tensor<fp16, [1, 192, 64, 64]> efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_5_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_5_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_5_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_5_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_5_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_6_cast);
            tensor<fp16, [1, 192, 64, 64]> efficientnetv2_s_blocks_5_mul_1_cast = silu(x = efficientnetv2_s_blocks_5_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [48, 192, 1, 1]> efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [48, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(610560)))];
            tensor<fp16, [48]> efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [48]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(629056)))];
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_5_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_5_mul_1_cast);
            tensor<fp16, [1, 48, 64, 64]> efficientnetv2_s_blocks_5_Add_cast = add(x = efficientnetv2_s_blocks_5_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_4_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_6_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_7_pad_0 = const()[name = tensor<string, []>("pad_7_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_6_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 48, 66, 66]> pad_7_cast = pad(constant_val = efficientnetv2_s_blocks_6_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_6_Pad_mode_0, pad = pad_7_pad_0, x = efficientnetv2_s_blocks_5_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_6_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_6_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> efficientnetv2_s_blocks_6_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_6_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_6_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [192, 48, 3, 3]> efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [192, 48, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(629248)))];
            tensor<fp16, [192]> efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795200)))];
            tensor<fp16, [1, 192, 32, 32]> efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_6_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_6_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_6_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_6_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_6_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_7_cast);
            tensor<fp16, [1, 192, 32, 32]> efficientnetv2_s_blocks_6_mul_1_cast = silu(x = efficientnetv2_s_blocks_6_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 192, 1, 1]> efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [64, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795648)))];
            tensor<fp16, [64]> efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820288)))];
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_6_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_6_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_7_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_8_pad_0 = const()[name = tensor<string, []>("pad_8_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_7_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 64, 34, 34]> pad_8_cast = pad(constant_val = efficientnetv2_s_blocks_7_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_7_Pad_mode_0, pad = pad_8_pad_0, x = efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_7_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_7_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_7_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_7_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_7_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 64, 3, 3]> efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(820480)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1115456)))];
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_7_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_7_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_7_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_7_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_7_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_8_cast);
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_7_mul_1_cast = silu(x = efficientnetv2_s_blocks_7_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 256, 1, 1]> efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [64, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1116032)))];
            tensor<fp16, [64]> efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1148864)))];
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_7_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_7_mul_1_cast);
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_7_Add_cast = add(x = efficientnetv2_s_blocks_7_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_6_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_8_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_9_pad_0 = const()[name = tensor<string, []>("pad_9_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_8_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 64, 34, 34]> pad_9_cast = pad(constant_val = efficientnetv2_s_blocks_8_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_8_Pad_mode_0, pad = pad_9_pad_0, x = efficientnetv2_s_blocks_7_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_8_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_8_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_8_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_8_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_8_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 64, 3, 3]> efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1149056)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1444032)))];
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_8_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_8_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_8_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_8_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_8_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_9_cast);
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_8_mul_1_cast = silu(x = efficientnetv2_s_blocks_8_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 256, 1, 1]> efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [64, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1444608)))];
            tensor<fp16, [64]> efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1477440)))];
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_8_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_8_mul_1_cast);
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_8_Add_cast = add(x = efficientnetv2_s_blocks_8_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_7_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_9_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_10_pad_0 = const()[name = tensor<string, []>("pad_10_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_9_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 64, 34, 34]> pad_10_cast = pad(constant_val = efficientnetv2_s_blocks_9_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_9_Pad_mode_0, pad = pad_10_pad_0, x = efficientnetv2_s_blocks_8_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_9_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_9_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_9_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_9_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_9_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 64, 3, 3]> efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1477632)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1772608)))];
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_9_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_9_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_9_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_9_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_9_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_10_cast);
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_9_mul_1_cast = silu(x = efficientnetv2_s_blocks_9_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 256, 1, 1]> efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [64, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1773184)))];
            tensor<fp16, [64]> efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1806016)))];
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_9_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_9_mul_1_cast);
            tensor<fp16, [1, 64, 32, 32]> efficientnetv2_s_blocks_9_Add_cast = add(x = efficientnetv2_s_blocks_9_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_8_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_10_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_10_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_10_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 64, 1, 1]> efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1806208)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1839040)))];
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_10_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_10_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_10_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_10_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_10_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_9_Add_cast);
            tensor<fp16, [1, 256, 32, 32]> efficientnetv2_s_blocks_10_mul_1_cast = silu(x = efficientnetv2_s_blocks_10_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_10_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_11_pad_0 = const()[name = tensor<string, []>("pad_11_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_10_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 256, 34, 34]> pad_11_cast = pad(constant_val = efficientnetv2_s_blocks_10_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_10_Pad_mode_0, pad = pad_11_pad_0, x = efficientnetv2_s_blocks_10_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(256)];
            tensor<int32, [4]> efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1, 3, 3]> efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1839616)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1844288)))];
            tensor<fp16, [1, 256, 16, 16]> efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_10_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_11_cast);
            tensor<fp16, [1, 256, 16, 16]> efficientnetv2_s_blocks_10_mul_3_cast = silu(x = efficientnetv2_s_blocks_10_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_10_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_0 = const()[name = tensor<string, []>("const_0"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 256, 1, 1]> efficientnetv2_s_blocks_10_se_Mean_cast = reduce_mean(axes = const_0, keep_dims = efficientnetv2_s_blocks_10_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_10_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [16, 256, 1, 1]> transpose_63_to_fp16 = const()[name = tensor<string, []>("transpose_63_to_fp16"), val = tensor<fp16, [16, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1844864)))];
            tensor<fp16, [16]> const_90_to_fp16 = const()[name = tensor<string, []>("const_90_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1853120)))];
            tensor<fp16, [1, 16, 1, 1]> efficientnetv2_s_blocks_10_se_conv2d_BiasAdd_cast = conv(bias = const_90_to_fp16, dilations = efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_10_se_conv2d_Conv2Dx_strides_0, weight = transpose_63_to_fp16, x = efficientnetv2_s_blocks_10_se_Mean_cast);
            tensor<fp16, [1, 16, 1, 1]> efficientnetv2_s_blocks_10_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_10_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 16, 1, 1]> transpose_65_to_fp16 = const()[name = tensor<string, []>("transpose_65_to_fp16"), val = tensor<fp16, [256, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1853248)))];
            tensor<fp16, [256]> const_91_to_fp16 = const()[name = tensor<string, []>("const_91_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1861504)))];
            tensor<fp16, [1, 256, 1, 1]> efficientnetv2_s_blocks_10_se_conv2d_1_BiasAdd_cast = conv(bias = const_91_to_fp16, dilations = efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_10_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_65_to_fp16, x = efficientnetv2_s_blocks_10_se_mul_1_cast);
            tensor<fp16, [1, 256, 1, 1]> efficientnetv2_s_blocks_10_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_10_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 256, 16, 16]> efficientnetv2_s_blocks_10_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_10_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_10_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1862080)))];
            tensor<fp16, [128]> efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1927680)))];
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_10_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_10_se_mul_2_cast);
            tensor<string, []> efficientnetv2_s_blocks_11_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_11_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_11_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1928000)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2059136)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_11_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_11_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_11_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_11_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_11_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_11_mul_1_cast = silu(x = efficientnetv2_s_blocks_11_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_11_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_12_pad_0 = const()[name = tensor<string, []>("pad_12_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_11_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 18, 18]> pad_12_cast = pad(constant_val = efficientnetv2_s_blocks_11_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_11_Pad_mode_0, pad = pad_12_pad_0, x = efficientnetv2_s_blocks_11_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(512)];
            tensor<int32, [4]> efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 3, 3]> efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2060224)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2069504)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_11_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_12_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_11_mul_3_cast = silu(x = efficientnetv2_s_blocks_11_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_11_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_3 = const()[name = tensor<string, []>("const_3"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_11_se_Mean_cast = reduce_mean(axes = const_3, keep_dims = efficientnetv2_s_blocks_11_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_11_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 512, 1, 1]> transpose_76_to_fp16 = const()[name = tensor<string, []>("transpose_76_to_fp16"), val = tensor<fp16, [32, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2070592)))];
            tensor<fp16, [32]> const_92_to_fp16 = const()[name = tensor<string, []>("const_92_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2103424)))];
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_11_se_conv2d_BiasAdd_cast = conv(bias = const_92_to_fp16, dilations = efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_11_se_conv2d_Conv2Dx_strides_0, weight = transpose_76_to_fp16, x = efficientnetv2_s_blocks_11_se_Mean_cast);
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_11_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_11_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 32, 1, 1]> transpose_78_to_fp16 = const()[name = tensor<string, []>("transpose_78_to_fp16"), val = tensor<fp16, [512, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2103552)))];
            tensor<fp16, [512]> const_93_to_fp16 = const()[name = tensor<string, []>("const_93_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2136384)))];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_11_se_conv2d_1_BiasAdd_cast = conv(bias = const_93_to_fp16, dilations = efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_11_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_78_to_fp16, x = efficientnetv2_s_blocks_11_se_mul_1_cast);
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_11_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_11_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_11_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_11_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_11_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2137472)))];
            tensor<fp16, [128]> efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2268608)))];
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_11_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_11_se_mul_2_cast);
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_11_Add_cast = add(x = efficientnetv2_s_blocks_11_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_10_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_12_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_12_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_12_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2268928)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2400064)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_12_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_12_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_12_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_12_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_12_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_11_Add_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_12_mul_1_cast = silu(x = efficientnetv2_s_blocks_12_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_12_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_13_pad_0 = const()[name = tensor<string, []>("pad_13_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_12_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 18, 18]> pad_13_cast = pad(constant_val = efficientnetv2_s_blocks_12_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_12_Pad_mode_0, pad = pad_13_pad_0, x = efficientnetv2_s_blocks_12_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(512)];
            tensor<int32, [4]> efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 3, 3]> efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2401152)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2410432)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_12_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_13_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_12_mul_3_cast = silu(x = efficientnetv2_s_blocks_12_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_12_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_6 = const()[name = tensor<string, []>("const_6"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_12_se_Mean_cast = reduce_mean(axes = const_6, keep_dims = efficientnetv2_s_blocks_12_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_12_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 512, 1, 1]> transpose_89_to_fp16 = const()[name = tensor<string, []>("transpose_89_to_fp16"), val = tensor<fp16, [32, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2411520)))];
            tensor<fp16, [32]> const_94_to_fp16 = const()[name = tensor<string, []>("const_94_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2444352)))];
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_12_se_conv2d_BiasAdd_cast = conv(bias = const_94_to_fp16, dilations = efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_12_se_conv2d_Conv2Dx_strides_0, weight = transpose_89_to_fp16, x = efficientnetv2_s_blocks_12_se_Mean_cast);
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_12_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_12_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 32, 1, 1]> transpose_91_to_fp16 = const()[name = tensor<string, []>("transpose_91_to_fp16"), val = tensor<fp16, [512, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2444480)))];
            tensor<fp16, [512]> const_95_to_fp16 = const()[name = tensor<string, []>("const_95_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2477312)))];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_12_se_conv2d_1_BiasAdd_cast = conv(bias = const_95_to_fp16, dilations = efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_12_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_91_to_fp16, x = efficientnetv2_s_blocks_12_se_mul_1_cast);
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_12_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_12_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_12_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_12_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_12_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2478400)))];
            tensor<fp16, [128]> efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2609536)))];
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_12_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_12_se_mul_2_cast);
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_12_Add_cast = add(x = efficientnetv2_s_blocks_12_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_11_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_13_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_13_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_13_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2609856)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2740992)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_13_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_13_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_13_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_13_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_13_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_12_Add_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_13_mul_1_cast = silu(x = efficientnetv2_s_blocks_13_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_13_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_14_pad_0 = const()[name = tensor<string, []>("pad_14_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_13_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 18, 18]> pad_14_cast = pad(constant_val = efficientnetv2_s_blocks_13_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_13_Pad_mode_0, pad = pad_14_pad_0, x = efficientnetv2_s_blocks_13_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(512)];
            tensor<int32, [4]> efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 3, 3]> efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2742080)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2751360)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_13_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_14_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_13_mul_3_cast = silu(x = efficientnetv2_s_blocks_13_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_13_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_9 = const()[name = tensor<string, []>("const_9"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_13_se_Mean_cast = reduce_mean(axes = const_9, keep_dims = efficientnetv2_s_blocks_13_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_13_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 512, 1, 1]> transpose_102_to_fp16 = const()[name = tensor<string, []>("transpose_102_to_fp16"), val = tensor<fp16, [32, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2752448)))];
            tensor<fp16, [32]> const_96_to_fp16 = const()[name = tensor<string, []>("const_96_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2785280)))];
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_13_se_conv2d_BiasAdd_cast = conv(bias = const_96_to_fp16, dilations = efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_13_se_conv2d_Conv2Dx_strides_0, weight = transpose_102_to_fp16, x = efficientnetv2_s_blocks_13_se_Mean_cast);
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_13_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_13_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 32, 1, 1]> transpose_104_to_fp16 = const()[name = tensor<string, []>("transpose_104_to_fp16"), val = tensor<fp16, [512, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2785408)))];
            tensor<fp16, [512]> const_97_to_fp16 = const()[name = tensor<string, []>("const_97_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2818240)))];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_13_se_conv2d_1_BiasAdd_cast = conv(bias = const_97_to_fp16, dilations = efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_13_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_104_to_fp16, x = efficientnetv2_s_blocks_13_se_mul_1_cast);
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_13_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_13_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_13_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_13_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_13_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2819328)))];
            tensor<fp16, [128]> efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2950464)))];
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_13_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_13_se_mul_2_cast);
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_13_Add_cast = add(x = efficientnetv2_s_blocks_13_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_12_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_14_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_14_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_14_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2950784)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3081920)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_14_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_14_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_14_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_14_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_14_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_13_Add_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_14_mul_1_cast = silu(x = efficientnetv2_s_blocks_14_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_14_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_15_pad_0 = const()[name = tensor<string, []>("pad_15_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_14_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 18, 18]> pad_15_cast = pad(constant_val = efficientnetv2_s_blocks_14_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_14_Pad_mode_0, pad = pad_15_pad_0, x = efficientnetv2_s_blocks_14_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(512)];
            tensor<int32, [4]> efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 3, 3]> efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3083008)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3092288)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_14_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_15_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_14_mul_3_cast = silu(x = efficientnetv2_s_blocks_14_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_14_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_12 = const()[name = tensor<string, []>("const_12"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_14_se_Mean_cast = reduce_mean(axes = const_12, keep_dims = efficientnetv2_s_blocks_14_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_14_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 512, 1, 1]> transpose_115_to_fp16 = const()[name = tensor<string, []>("transpose_115_to_fp16"), val = tensor<fp16, [32, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3093376)))];
            tensor<fp16, [32]> const_98_to_fp16 = const()[name = tensor<string, []>("const_98_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3126208)))];
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_14_se_conv2d_BiasAdd_cast = conv(bias = const_98_to_fp16, dilations = efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_14_se_conv2d_Conv2Dx_strides_0, weight = transpose_115_to_fp16, x = efficientnetv2_s_blocks_14_se_Mean_cast);
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_14_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_14_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 32, 1, 1]> transpose_117_to_fp16 = const()[name = tensor<string, []>("transpose_117_to_fp16"), val = tensor<fp16, [512, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3126336)))];
            tensor<fp16, [512]> const_99_to_fp16 = const()[name = tensor<string, []>("const_99_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3159168)))];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_14_se_conv2d_1_BiasAdd_cast = conv(bias = const_99_to_fp16, dilations = efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_14_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_117_to_fp16, x = efficientnetv2_s_blocks_14_se_mul_1_cast);
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_14_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_14_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_14_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_14_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_14_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3160256)))];
            tensor<fp16, [128]> efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3291392)))];
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_14_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_14_se_mul_2_cast);
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_14_Add_cast = add(x = efficientnetv2_s_blocks_14_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_13_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_15_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_15_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_15_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3291712)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3422848)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_15_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_15_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_15_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_15_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_15_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_14_Add_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_15_mul_1_cast = silu(x = efficientnetv2_s_blocks_15_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_15_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_16_pad_0 = const()[name = tensor<string, []>("pad_16_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_15_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 18, 18]> pad_16_cast = pad(constant_val = efficientnetv2_s_blocks_15_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_15_Pad_mode_0, pad = pad_16_pad_0, x = efficientnetv2_s_blocks_15_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(512)];
            tensor<int32, [4]> efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 3, 3]> efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3423936)))];
            tensor<fp16, [512]> efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3433216)))];
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_15_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_16_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_15_mul_3_cast = silu(x = efficientnetv2_s_blocks_15_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_15_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_15 = const()[name = tensor<string, []>("const_15"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_15_se_Mean_cast = reduce_mean(axes = const_15, keep_dims = efficientnetv2_s_blocks_15_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_15_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 512, 1, 1]> transpose_128_to_fp16 = const()[name = tensor<string, []>("transpose_128_to_fp16"), val = tensor<fp16, [32, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3434304)))];
            tensor<fp16, [32]> const_100_to_fp16 = const()[name = tensor<string, []>("const_100_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3467136)))];
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_15_se_conv2d_BiasAdd_cast = conv(bias = const_100_to_fp16, dilations = efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_15_se_conv2d_Conv2Dx_strides_0, weight = transpose_128_to_fp16, x = efficientnetv2_s_blocks_15_se_Mean_cast);
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_15_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_15_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 32, 1, 1]> transpose_130_to_fp16 = const()[name = tensor<string, []>("transpose_130_to_fp16"), val = tensor<fp16, [512, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3467264)))];
            tensor<fp16, [512]> const_101_to_fp16 = const()[name = tensor<string, []>("const_101_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3500096)))];
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_15_se_conv2d_1_BiasAdd_cast = conv(bias = const_101_to_fp16, dilations = efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_15_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_130_to_fp16, x = efficientnetv2_s_blocks_15_se_mul_1_cast);
            tensor<fp16, [1, 512, 1, 1]> efficientnetv2_s_blocks_15_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_15_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 512, 16, 16]> efficientnetv2_s_blocks_15_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_15_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_15_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3501184)))];
            tensor<fp16, [128]> efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3632320)))];
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_15_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_15_se_mul_2_cast);
            tensor<fp16, [1, 128, 16, 16]> efficientnetv2_s_blocks_15_Add_cast = add(x = efficientnetv2_s_blocks_15_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_14_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_16_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_16_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_16_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 128, 1, 1]> efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [768, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3632640)))];
            tensor<fp16, [768]> efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3829312)))];
            tensor<fp16, [1, 768, 16, 16]> efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_16_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_16_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_16_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_16_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_16_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_15_Add_cast);
            tensor<fp16, [1, 768, 16, 16]> efficientnetv2_s_blocks_16_mul_1_cast = silu(x = efficientnetv2_s_blocks_16_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_16_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_17_pad_0 = const()[name = tensor<string, []>("pad_17_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_16_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 768, 18, 18]> pad_17_cast = pad(constant_val = efficientnetv2_s_blocks_16_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_16_Pad_mode_0, pad = pad_17_pad_0, x = efficientnetv2_s_blocks_16_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(768)];
            tensor<int32, [4]> efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 1, 3, 3]> efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [768, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3830912)))];
            tensor<fp16, [768]> efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3844800)))];
            tensor<fp16, [1, 768, 16, 16]> efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_16_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_17_cast);
            tensor<fp16, [1, 768, 16, 16]> efficientnetv2_s_blocks_16_mul_3_cast = silu(x = efficientnetv2_s_blocks_16_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_16_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_18 = const()[name = tensor<string, []>("const_18"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 768, 1, 1]> efficientnetv2_s_blocks_16_se_Mean_cast = reduce_mean(axes = const_18, keep_dims = efficientnetv2_s_blocks_16_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_16_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 768, 1, 1]> transpose_141_to_fp16 = const()[name = tensor<string, []>("transpose_141_to_fp16"), val = tensor<fp16, [32, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3846400)))];
            tensor<fp16, [32]> const_102_to_fp16 = const()[name = tensor<string, []>("const_102_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3895616)))];
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_16_se_conv2d_BiasAdd_cast = conv(bias = const_102_to_fp16, dilations = efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_16_se_conv2d_Conv2Dx_strides_0, weight = transpose_141_to_fp16, x = efficientnetv2_s_blocks_16_se_Mean_cast);
            tensor<fp16, [1, 32, 1, 1]> efficientnetv2_s_blocks_16_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_16_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [768, 32, 1, 1]> transpose_143_to_fp16 = const()[name = tensor<string, []>("transpose_143_to_fp16"), val = tensor<fp16, [768, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3895744)))];
            tensor<fp16, [768]> const_103_to_fp16 = const()[name = tensor<string, []>("const_103_to_fp16"), val = tensor<fp16, [768]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3944960)))];
            tensor<fp16, [1, 768, 1, 1]> efficientnetv2_s_blocks_16_se_conv2d_1_BiasAdd_cast = conv(bias = const_103_to_fp16, dilations = efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_16_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_143_to_fp16, x = efficientnetv2_s_blocks_16_se_mul_1_cast);
            tensor<fp16, [1, 768, 1, 1]> efficientnetv2_s_blocks_16_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_16_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 768, 16, 16]> efficientnetv2_s_blocks_16_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_16_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_16_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 768, 1, 1]> efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3946560)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4192384)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_16_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_16_se_mul_2_cast);
            tensor<string, []> efficientnetv2_s_blocks_17_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_17_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_17_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4192768)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4500032)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_17_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_17_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_17_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_17_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_17_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_17_mul_1_cast = silu(x = efficientnetv2_s_blocks_17_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_17_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_18_pad_0 = const()[name = tensor<string, []>("pad_18_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_17_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_18_cast = pad(constant_val = efficientnetv2_s_blocks_17_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_17_Pad_mode_0, pad = pad_18_pad_0, x = efficientnetv2_s_blocks_17_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4502016)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4519360)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_17_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_18_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_17_mul_3_cast = silu(x = efficientnetv2_s_blocks_17_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_17_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_21 = const()[name = tensor<string, []>("const_21"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_17_se_Mean_cast = reduce_mean(axes = const_21, keep_dims = efficientnetv2_s_blocks_17_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_17_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_154_to_fp16 = const()[name = tensor<string, []>("transpose_154_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4521344)))];
            tensor<fp16, [40]> const_104_to_fp16 = const()[name = tensor<string, []>("const_104_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4598208)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_17_se_conv2d_BiasAdd_cast = conv(bias = const_104_to_fp16, dilations = efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_17_se_conv2d_Conv2Dx_strides_0, weight = transpose_154_to_fp16, x = efficientnetv2_s_blocks_17_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_17_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_17_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_156_to_fp16 = const()[name = tensor<string, []>("transpose_156_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4598400)))];
            tensor<fp16, [960]> const_105_to_fp16 = const()[name = tensor<string, []>("const_105_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4675264)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_17_se_conv2d_1_BiasAdd_cast = conv(bias = const_105_to_fp16, dilations = efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_17_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_156_to_fp16, x = efficientnetv2_s_blocks_17_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_17_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_17_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_17_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_17_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_17_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4677248)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4984512)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_17_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_17_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_17_Add_cast = add(x = efficientnetv2_s_blocks_17_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_16_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_18_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_18_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_18_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4984896)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5292160)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_18_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_18_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_18_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_18_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_18_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_17_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_18_mul_1_cast = silu(x = efficientnetv2_s_blocks_18_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_18_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_19_pad_0 = const()[name = tensor<string, []>("pad_19_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_18_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_19_cast = pad(constant_val = efficientnetv2_s_blocks_18_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_18_Pad_mode_0, pad = pad_19_pad_0, x = efficientnetv2_s_blocks_18_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5294144)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5311488)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_18_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_19_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_18_mul_3_cast = silu(x = efficientnetv2_s_blocks_18_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_18_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_24 = const()[name = tensor<string, []>("const_24"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_18_se_Mean_cast = reduce_mean(axes = const_24, keep_dims = efficientnetv2_s_blocks_18_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_18_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_167_to_fp16 = const()[name = tensor<string, []>("transpose_167_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5313472)))];
            tensor<fp16, [40]> const_106_to_fp16 = const()[name = tensor<string, []>("const_106_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5390336)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_18_se_conv2d_BiasAdd_cast = conv(bias = const_106_to_fp16, dilations = efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_18_se_conv2d_Conv2Dx_strides_0, weight = transpose_167_to_fp16, x = efficientnetv2_s_blocks_18_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_18_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_18_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_169_to_fp16 = const()[name = tensor<string, []>("transpose_169_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5390528)))];
            tensor<fp16, [960]> const_107_to_fp16 = const()[name = tensor<string, []>("const_107_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5467392)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_18_se_conv2d_1_BiasAdd_cast = conv(bias = const_107_to_fp16, dilations = efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_18_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_169_to_fp16, x = efficientnetv2_s_blocks_18_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_18_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_18_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_18_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_18_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_18_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5469376)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5776640)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_18_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_18_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_18_Add_cast = add(x = efficientnetv2_s_blocks_18_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_17_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_19_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_19_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_19_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5777024)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6084288)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_19_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_19_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_19_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_19_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_19_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_18_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_19_mul_1_cast = silu(x = efficientnetv2_s_blocks_19_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_19_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_20_pad_0 = const()[name = tensor<string, []>("pad_20_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_19_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_20_cast = pad(constant_val = efficientnetv2_s_blocks_19_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_19_Pad_mode_0, pad = pad_20_pad_0, x = efficientnetv2_s_blocks_19_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6086272)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6103616)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_19_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_20_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_19_mul_3_cast = silu(x = efficientnetv2_s_blocks_19_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_19_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_27 = const()[name = tensor<string, []>("const_27"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_19_se_Mean_cast = reduce_mean(axes = const_27, keep_dims = efficientnetv2_s_blocks_19_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_19_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_180_to_fp16 = const()[name = tensor<string, []>("transpose_180_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6105600)))];
            tensor<fp16, [40]> const_108_to_fp16 = const()[name = tensor<string, []>("const_108_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6182464)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_19_se_conv2d_BiasAdd_cast = conv(bias = const_108_to_fp16, dilations = efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_19_se_conv2d_Conv2Dx_strides_0, weight = transpose_180_to_fp16, x = efficientnetv2_s_blocks_19_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_19_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_19_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_182_to_fp16 = const()[name = tensor<string, []>("transpose_182_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6182656)))];
            tensor<fp16, [960]> const_109_to_fp16 = const()[name = tensor<string, []>("const_109_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6259520)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_19_se_conv2d_1_BiasAdd_cast = conv(bias = const_109_to_fp16, dilations = efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_19_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_182_to_fp16, x = efficientnetv2_s_blocks_19_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_19_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_19_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_19_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_19_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_19_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6261504)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6568768)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_19_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_19_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_19_Add_cast = add(x = efficientnetv2_s_blocks_19_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_18_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_20_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_20_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_20_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6569152)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6876416)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_20_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_20_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_20_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_20_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_20_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_19_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_20_mul_1_cast = silu(x = efficientnetv2_s_blocks_20_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_20_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_21_pad_0 = const()[name = tensor<string, []>("pad_21_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_20_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_21_cast = pad(constant_val = efficientnetv2_s_blocks_20_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_20_Pad_mode_0, pad = pad_21_pad_0, x = efficientnetv2_s_blocks_20_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6878400)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6895744)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_20_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_21_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_20_mul_3_cast = silu(x = efficientnetv2_s_blocks_20_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_20_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_30 = const()[name = tensor<string, []>("const_30"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_20_se_Mean_cast = reduce_mean(axes = const_30, keep_dims = efficientnetv2_s_blocks_20_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_20_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_193_to_fp16 = const()[name = tensor<string, []>("transpose_193_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6897728)))];
            tensor<fp16, [40]> const_110_to_fp16 = const()[name = tensor<string, []>("const_110_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6974592)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_20_se_conv2d_BiasAdd_cast = conv(bias = const_110_to_fp16, dilations = efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_20_se_conv2d_Conv2Dx_strides_0, weight = transpose_193_to_fp16, x = efficientnetv2_s_blocks_20_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_20_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_20_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_195_to_fp16 = const()[name = tensor<string, []>("transpose_195_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6974784)))];
            tensor<fp16, [960]> const_111_to_fp16 = const()[name = tensor<string, []>("const_111_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7051648)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_20_se_conv2d_1_BiasAdd_cast = conv(bias = const_111_to_fp16, dilations = efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_20_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_195_to_fp16, x = efficientnetv2_s_blocks_20_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_20_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_20_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_20_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_20_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_20_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7053632)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7360896)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_20_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_20_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_20_Add_cast = add(x = efficientnetv2_s_blocks_20_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_19_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_21_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_21_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_21_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7361280)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7668544)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_21_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_21_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_21_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_21_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_21_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_20_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_21_mul_1_cast = silu(x = efficientnetv2_s_blocks_21_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_21_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_22_pad_0 = const()[name = tensor<string, []>("pad_22_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_21_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_22_cast = pad(constant_val = efficientnetv2_s_blocks_21_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_21_Pad_mode_0, pad = pad_22_pad_0, x = efficientnetv2_s_blocks_21_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7670528)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7687872)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_21_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_22_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_21_mul_3_cast = silu(x = efficientnetv2_s_blocks_21_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_21_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_33 = const()[name = tensor<string, []>("const_33"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_21_se_Mean_cast = reduce_mean(axes = const_33, keep_dims = efficientnetv2_s_blocks_21_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_21_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_206_to_fp16 = const()[name = tensor<string, []>("transpose_206_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7689856)))];
            tensor<fp16, [40]> const_112_to_fp16 = const()[name = tensor<string, []>("const_112_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7766720)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_21_se_conv2d_BiasAdd_cast = conv(bias = const_112_to_fp16, dilations = efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_21_se_conv2d_Conv2Dx_strides_0, weight = transpose_206_to_fp16, x = efficientnetv2_s_blocks_21_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_21_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_21_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_208_to_fp16 = const()[name = tensor<string, []>("transpose_208_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7766912)))];
            tensor<fp16, [960]> const_113_to_fp16 = const()[name = tensor<string, []>("const_113_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7843776)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_21_se_conv2d_1_BiasAdd_cast = conv(bias = const_113_to_fp16, dilations = efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_21_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_208_to_fp16, x = efficientnetv2_s_blocks_21_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_21_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_21_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_21_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_21_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_21_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7845760)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8153024)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_21_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_21_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_21_Add_cast = add(x = efficientnetv2_s_blocks_21_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_20_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_22_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_22_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_22_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8153408)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8460672)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_22_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_22_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_22_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_22_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_22_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_21_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_22_mul_1_cast = silu(x = efficientnetv2_s_blocks_22_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_22_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_23_pad_0 = const()[name = tensor<string, []>("pad_23_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_22_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_23_cast = pad(constant_val = efficientnetv2_s_blocks_22_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_22_Pad_mode_0, pad = pad_23_pad_0, x = efficientnetv2_s_blocks_22_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8462656)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8480000)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_22_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_23_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_22_mul_3_cast = silu(x = efficientnetv2_s_blocks_22_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_22_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_36 = const()[name = tensor<string, []>("const_36"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_22_se_Mean_cast = reduce_mean(axes = const_36, keep_dims = efficientnetv2_s_blocks_22_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_22_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_219_to_fp16 = const()[name = tensor<string, []>("transpose_219_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8481984)))];
            tensor<fp16, [40]> const_114_to_fp16 = const()[name = tensor<string, []>("const_114_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8558848)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_22_se_conv2d_BiasAdd_cast = conv(bias = const_114_to_fp16, dilations = efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_22_se_conv2d_Conv2Dx_strides_0, weight = transpose_219_to_fp16, x = efficientnetv2_s_blocks_22_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_22_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_22_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_221_to_fp16 = const()[name = tensor<string, []>("transpose_221_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8559040)))];
            tensor<fp16, [960]> const_115_to_fp16 = const()[name = tensor<string, []>("const_115_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8635904)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_22_se_conv2d_1_BiasAdd_cast = conv(bias = const_115_to_fp16, dilations = efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_22_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_221_to_fp16, x = efficientnetv2_s_blocks_22_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_22_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_22_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_22_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_22_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_22_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8637888)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8945152)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_22_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_22_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_22_Add_cast = add(x = efficientnetv2_s_blocks_22_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_21_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_23_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_23_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_23_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8945536)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9252800)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_23_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_23_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_23_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_23_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_23_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_22_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_23_mul_1_cast = silu(x = efficientnetv2_s_blocks_23_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_23_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_24_pad_0 = const()[name = tensor<string, []>("pad_24_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_23_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_24_cast = pad(constant_val = efficientnetv2_s_blocks_23_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_23_Pad_mode_0, pad = pad_24_pad_0, x = efficientnetv2_s_blocks_23_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9254784)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9272128)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_23_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_24_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_23_mul_3_cast = silu(x = efficientnetv2_s_blocks_23_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_23_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_39 = const()[name = tensor<string, []>("const_39"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_23_se_Mean_cast = reduce_mean(axes = const_39, keep_dims = efficientnetv2_s_blocks_23_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_23_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_232_to_fp16 = const()[name = tensor<string, []>("transpose_232_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9274112)))];
            tensor<fp16, [40]> const_116_to_fp16 = const()[name = tensor<string, []>("const_116_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9350976)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_23_se_conv2d_BiasAdd_cast = conv(bias = const_116_to_fp16, dilations = efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_23_se_conv2d_Conv2Dx_strides_0, weight = transpose_232_to_fp16, x = efficientnetv2_s_blocks_23_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_23_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_23_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_234_to_fp16 = const()[name = tensor<string, []>("transpose_234_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9351168)))];
            tensor<fp16, [960]> const_117_to_fp16 = const()[name = tensor<string, []>("const_117_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9428032)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_23_se_conv2d_1_BiasAdd_cast = conv(bias = const_117_to_fp16, dilations = efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_23_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_234_to_fp16, x = efficientnetv2_s_blocks_23_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_23_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_23_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_23_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_23_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_23_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9430016)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9737280)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_23_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_23_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_23_Add_cast = add(x = efficientnetv2_s_blocks_23_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_22_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_24_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_24_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_24_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9737664)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10044928)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_24_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_24_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_24_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_24_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_24_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_23_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_24_mul_1_cast = silu(x = efficientnetv2_s_blocks_24_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_24_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_25_pad_0 = const()[name = tensor<string, []>("pad_25_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_24_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_25_cast = pad(constant_val = efficientnetv2_s_blocks_24_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_24_Pad_mode_0, pad = pad_25_pad_0, x = efficientnetv2_s_blocks_24_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10046912)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10064256)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_24_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_25_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_24_mul_3_cast = silu(x = efficientnetv2_s_blocks_24_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_24_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_42 = const()[name = tensor<string, []>("const_42"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_24_se_Mean_cast = reduce_mean(axes = const_42, keep_dims = efficientnetv2_s_blocks_24_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_24_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_245_to_fp16 = const()[name = tensor<string, []>("transpose_245_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10066240)))];
            tensor<fp16, [40]> const_118_to_fp16 = const()[name = tensor<string, []>("const_118_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10143104)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_24_se_conv2d_BiasAdd_cast = conv(bias = const_118_to_fp16, dilations = efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_24_se_conv2d_Conv2Dx_strides_0, weight = transpose_245_to_fp16, x = efficientnetv2_s_blocks_24_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_24_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_24_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_247_to_fp16 = const()[name = tensor<string, []>("transpose_247_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10143296)))];
            tensor<fp16, [960]> const_119_to_fp16 = const()[name = tensor<string, []>("const_119_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10220160)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_24_se_conv2d_1_BiasAdd_cast = conv(bias = const_119_to_fp16, dilations = efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_24_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_247_to_fp16, x = efficientnetv2_s_blocks_24_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_24_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_24_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_24_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_24_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_24_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [160, 960, 1, 1]> efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10222144)))];
            tensor<fp16, [160]> efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10529408)))];
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_24_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_24_se_mul_2_cast);
            tensor<fp16, [1, 160, 16, 16]> efficientnetv2_s_blocks_24_Add_cast = add(x = efficientnetv2_s_blocks_24_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_23_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_25_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_25_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_25_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 160, 1, 1]> efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10529792)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10837056)))];
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_25_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_25_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_25_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_25_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_25_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_24_Add_cast);
            tensor<fp16, [1, 960, 16, 16]> efficientnetv2_s_blocks_25_mul_1_cast = silu(x = efficientnetv2_s_blocks_25_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_25_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_26_pad_0 = const()[name = tensor<string, []>("pad_26_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_25_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 960, 18, 18]> pad_26_cast = pad(constant_val = efficientnetv2_s_blocks_25_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_25_Pad_mode_0, pad = pad_26_pad_0, x = efficientnetv2_s_blocks_25_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [4]> efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 1, 3, 3]> efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10839040)))];
            tensor<fp16, [960]> efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10856384)))];
            tensor<fp16, [1, 960, 8, 8]> efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_25_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_26_cast);
            tensor<fp16, [1, 960, 8, 8]> efficientnetv2_s_blocks_25_mul_3_cast = silu(x = efficientnetv2_s_blocks_25_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_25_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_45 = const()[name = tensor<string, []>("const_45"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_25_se_Mean_cast = reduce_mean(axes = const_45, keep_dims = efficientnetv2_s_blocks_25_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_25_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [40, 960, 1, 1]> transpose_258_to_fp16 = const()[name = tensor<string, []>("transpose_258_to_fp16"), val = tensor<fp16, [40, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10858368)))];
            tensor<fp16, [40]> const_120_to_fp16 = const()[name = tensor<string, []>("const_120_to_fp16"), val = tensor<fp16, [40]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10935232)))];
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_25_se_conv2d_BiasAdd_cast = conv(bias = const_120_to_fp16, dilations = efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_25_se_conv2d_Conv2Dx_strides_0, weight = transpose_258_to_fp16, x = efficientnetv2_s_blocks_25_se_Mean_cast);
            tensor<fp16, [1, 40, 1, 1]> efficientnetv2_s_blocks_25_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_25_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [960, 40, 1, 1]> transpose_260_to_fp16 = const()[name = tensor<string, []>("transpose_260_to_fp16"), val = tensor<fp16, [960, 40, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10935424)))];
            tensor<fp16, [960]> const_121_to_fp16 = const()[name = tensor<string, []>("const_121_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11012288)))];
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_25_se_conv2d_1_BiasAdd_cast = conv(bias = const_121_to_fp16, dilations = efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_25_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_260_to_fp16, x = efficientnetv2_s_blocks_25_se_mul_1_cast);
            tensor<fp16, [1, 960, 1, 1]> efficientnetv2_s_blocks_25_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_25_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 960, 8, 8]> efficientnetv2_s_blocks_25_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_25_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_25_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 960, 1, 1]> efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11014272)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11505856)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_25_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_25_se_mul_2_cast);
            tensor<string, []> efficientnetv2_s_blocks_26_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_26_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_26_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11506432)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12292928)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_26_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_26_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_26_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_26_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_26_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_26_mul_1_cast = silu(x = efficientnetv2_s_blocks_26_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_26_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_27_pad_0 = const()[name = tensor<string, []>("pad_27_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_26_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_27_cast = pad(constant_val = efficientnetv2_s_blocks_26_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_26_Pad_mode_0, pad = pad_27_pad_0, x = efficientnetv2_s_blocks_26_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12296064)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12323776)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_26_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_27_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_26_mul_3_cast = silu(x = efficientnetv2_s_blocks_26_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_26_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_48 = const()[name = tensor<string, []>("const_48"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_26_se_Mean_cast = reduce_mean(axes = const_48, keep_dims = efficientnetv2_s_blocks_26_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_26_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_271_to_fp16 = const()[name = tensor<string, []>("transpose_271_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12326912)))];
            tensor<fp16, [64]> const_122_to_fp16 = const()[name = tensor<string, []>("const_122_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12523584)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_26_se_conv2d_BiasAdd_cast = conv(bias = const_122_to_fp16, dilations = efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_26_se_conv2d_Conv2Dx_strides_0, weight = transpose_271_to_fp16, x = efficientnetv2_s_blocks_26_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_26_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_26_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_273_to_fp16 = const()[name = tensor<string, []>("transpose_273_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12523776)))];
            tensor<fp16, [1536]> const_123_to_fp16 = const()[name = tensor<string, []>("const_123_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12720448)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_26_se_conv2d_1_BiasAdd_cast = conv(bias = const_123_to_fp16, dilations = efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_26_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_273_to_fp16, x = efficientnetv2_s_blocks_26_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_26_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_26_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_26_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_26_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_26_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12723584)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13510080)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_26_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_26_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_26_Add_cast = add(x = efficientnetv2_s_blocks_26_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_25_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_27_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_27_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_27_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13510656)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14297152)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_27_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_27_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_27_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_27_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_27_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_26_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_27_mul_1_cast = silu(x = efficientnetv2_s_blocks_27_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_27_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_28_pad_0 = const()[name = tensor<string, []>("pad_28_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_27_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_28_cast = pad(constant_val = efficientnetv2_s_blocks_27_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_27_Pad_mode_0, pad = pad_28_pad_0, x = efficientnetv2_s_blocks_27_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14300288)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14328000)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_27_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_28_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_27_mul_3_cast = silu(x = efficientnetv2_s_blocks_27_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_27_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_51 = const()[name = tensor<string, []>("const_51"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_27_se_Mean_cast = reduce_mean(axes = const_51, keep_dims = efficientnetv2_s_blocks_27_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_27_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_284_to_fp16 = const()[name = tensor<string, []>("transpose_284_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14331136)))];
            tensor<fp16, [64]> const_124_to_fp16 = const()[name = tensor<string, []>("const_124_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14527808)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_27_se_conv2d_BiasAdd_cast = conv(bias = const_124_to_fp16, dilations = efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_27_se_conv2d_Conv2Dx_strides_0, weight = transpose_284_to_fp16, x = efficientnetv2_s_blocks_27_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_27_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_27_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_286_to_fp16 = const()[name = tensor<string, []>("transpose_286_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14528000)))];
            tensor<fp16, [1536]> const_125_to_fp16 = const()[name = tensor<string, []>("const_125_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14724672)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_27_se_conv2d_1_BiasAdd_cast = conv(bias = const_125_to_fp16, dilations = efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_27_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_286_to_fp16, x = efficientnetv2_s_blocks_27_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_27_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_27_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_27_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_27_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_27_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14727808)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15514304)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_27_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_27_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_27_Add_cast = add(x = efficientnetv2_s_blocks_27_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_26_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_28_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_28_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_28_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15514880)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16301376)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_28_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_28_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_28_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_28_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_28_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_27_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_28_mul_1_cast = silu(x = efficientnetv2_s_blocks_28_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_28_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_29_pad_0 = const()[name = tensor<string, []>("pad_29_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_28_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_29_cast = pad(constant_val = efficientnetv2_s_blocks_28_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_28_Pad_mode_0, pad = pad_29_pad_0, x = efficientnetv2_s_blocks_28_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16304512)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16332224)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_28_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_29_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_28_mul_3_cast = silu(x = efficientnetv2_s_blocks_28_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_28_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_54 = const()[name = tensor<string, []>("const_54"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_28_se_Mean_cast = reduce_mean(axes = const_54, keep_dims = efficientnetv2_s_blocks_28_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_28_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_297_to_fp16 = const()[name = tensor<string, []>("transpose_297_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16335360)))];
            tensor<fp16, [64]> const_126_to_fp16 = const()[name = tensor<string, []>("const_126_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16532032)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_28_se_conv2d_BiasAdd_cast = conv(bias = const_126_to_fp16, dilations = efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_28_se_conv2d_Conv2Dx_strides_0, weight = transpose_297_to_fp16, x = efficientnetv2_s_blocks_28_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_28_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_28_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_299_to_fp16 = const()[name = tensor<string, []>("transpose_299_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16532224)))];
            tensor<fp16, [1536]> const_127_to_fp16 = const()[name = tensor<string, []>("const_127_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16728896)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_28_se_conv2d_1_BiasAdd_cast = conv(bias = const_127_to_fp16, dilations = efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_28_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_299_to_fp16, x = efficientnetv2_s_blocks_28_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_28_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_28_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_28_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_28_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_28_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16732032)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17518528)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_28_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_28_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_28_Add_cast = add(x = efficientnetv2_s_blocks_28_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_27_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_29_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_29_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_29_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17519104)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18305600)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_29_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_29_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_29_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_29_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_29_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_28_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_29_mul_1_cast = silu(x = efficientnetv2_s_blocks_29_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_29_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_30_pad_0 = const()[name = tensor<string, []>("pad_30_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_29_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_30_cast = pad(constant_val = efficientnetv2_s_blocks_29_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_29_Pad_mode_0, pad = pad_30_pad_0, x = efficientnetv2_s_blocks_29_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18308736)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18336448)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_29_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_30_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_29_mul_3_cast = silu(x = efficientnetv2_s_blocks_29_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_29_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_57 = const()[name = tensor<string, []>("const_57"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_29_se_Mean_cast = reduce_mean(axes = const_57, keep_dims = efficientnetv2_s_blocks_29_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_29_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_310_to_fp16 = const()[name = tensor<string, []>("transpose_310_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18339584)))];
            tensor<fp16, [64]> const_128_to_fp16 = const()[name = tensor<string, []>("const_128_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18536256)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_29_se_conv2d_BiasAdd_cast = conv(bias = const_128_to_fp16, dilations = efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_29_se_conv2d_Conv2Dx_strides_0, weight = transpose_310_to_fp16, x = efficientnetv2_s_blocks_29_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_29_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_29_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_312_to_fp16 = const()[name = tensor<string, []>("transpose_312_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18536448)))];
            tensor<fp16, [1536]> const_129_to_fp16 = const()[name = tensor<string, []>("const_129_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18733120)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_29_se_conv2d_1_BiasAdd_cast = conv(bias = const_129_to_fp16, dilations = efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_29_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_312_to_fp16, x = efficientnetv2_s_blocks_29_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_29_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_29_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_29_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_29_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_29_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18736256)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19522752)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_29_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_29_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_29_Add_cast = add(x = efficientnetv2_s_blocks_29_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_28_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_30_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_30_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_30_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19523328)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20309824)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_30_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_30_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_30_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_30_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_30_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_29_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_30_mul_1_cast = silu(x = efficientnetv2_s_blocks_30_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_30_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_31_pad_0 = const()[name = tensor<string, []>("pad_31_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_30_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_31_cast = pad(constant_val = efficientnetv2_s_blocks_30_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_30_Pad_mode_0, pad = pad_31_pad_0, x = efficientnetv2_s_blocks_30_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20312960)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20340672)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_30_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_31_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_30_mul_3_cast = silu(x = efficientnetv2_s_blocks_30_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_30_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_60 = const()[name = tensor<string, []>("const_60"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_30_se_Mean_cast = reduce_mean(axes = const_60, keep_dims = efficientnetv2_s_blocks_30_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_30_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_323_to_fp16 = const()[name = tensor<string, []>("transpose_323_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20343808)))];
            tensor<fp16, [64]> const_130_to_fp16 = const()[name = tensor<string, []>("const_130_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20540480)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_30_se_conv2d_BiasAdd_cast = conv(bias = const_130_to_fp16, dilations = efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_30_se_conv2d_Conv2Dx_strides_0, weight = transpose_323_to_fp16, x = efficientnetv2_s_blocks_30_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_30_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_30_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_325_to_fp16 = const()[name = tensor<string, []>("transpose_325_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20540672)))];
            tensor<fp16, [1536]> const_131_to_fp16 = const()[name = tensor<string, []>("const_131_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20737344)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_30_se_conv2d_1_BiasAdd_cast = conv(bias = const_131_to_fp16, dilations = efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_30_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_325_to_fp16, x = efficientnetv2_s_blocks_30_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_30_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_30_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_30_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_30_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_30_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20740480)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21526976)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_30_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_30_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_30_Add_cast = add(x = efficientnetv2_s_blocks_30_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_29_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_31_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_31_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_31_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21527552)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22314048)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_31_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_31_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_31_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_31_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_31_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_30_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_31_mul_1_cast = silu(x = efficientnetv2_s_blocks_31_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_31_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_32_pad_0 = const()[name = tensor<string, []>("pad_32_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_31_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_32_cast = pad(constant_val = efficientnetv2_s_blocks_31_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_31_Pad_mode_0, pad = pad_32_pad_0, x = efficientnetv2_s_blocks_31_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22317184)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22344896)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_31_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_32_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_31_mul_3_cast = silu(x = efficientnetv2_s_blocks_31_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_31_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_63 = const()[name = tensor<string, []>("const_63"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_31_se_Mean_cast = reduce_mean(axes = const_63, keep_dims = efficientnetv2_s_blocks_31_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_31_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_336_to_fp16 = const()[name = tensor<string, []>("transpose_336_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22348032)))];
            tensor<fp16, [64]> const_132_to_fp16 = const()[name = tensor<string, []>("const_132_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22544704)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_31_se_conv2d_BiasAdd_cast = conv(bias = const_132_to_fp16, dilations = efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_31_se_conv2d_Conv2Dx_strides_0, weight = transpose_336_to_fp16, x = efficientnetv2_s_blocks_31_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_31_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_31_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_338_to_fp16 = const()[name = tensor<string, []>("transpose_338_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22544896)))];
            tensor<fp16, [1536]> const_133_to_fp16 = const()[name = tensor<string, []>("const_133_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22741568)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_31_se_conv2d_1_BiasAdd_cast = conv(bias = const_133_to_fp16, dilations = efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_31_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_338_to_fp16, x = efficientnetv2_s_blocks_31_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_31_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_31_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_31_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_31_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_31_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22744704)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23531200)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_31_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_31_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_31_Add_cast = add(x = efficientnetv2_s_blocks_31_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_30_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_32_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_32_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_32_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23531776)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24318272)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_32_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_32_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_32_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_32_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_32_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_31_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_32_mul_1_cast = silu(x = efficientnetv2_s_blocks_32_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_32_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_33_pad_0 = const()[name = tensor<string, []>("pad_33_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_32_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_33_cast = pad(constant_val = efficientnetv2_s_blocks_32_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_32_Pad_mode_0, pad = pad_33_pad_0, x = efficientnetv2_s_blocks_32_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24321408)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24349120)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_32_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_33_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_32_mul_3_cast = silu(x = efficientnetv2_s_blocks_32_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_32_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_66 = const()[name = tensor<string, []>("const_66"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_32_se_Mean_cast = reduce_mean(axes = const_66, keep_dims = efficientnetv2_s_blocks_32_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_32_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_349_to_fp16 = const()[name = tensor<string, []>("transpose_349_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24352256)))];
            tensor<fp16, [64]> const_134_to_fp16 = const()[name = tensor<string, []>("const_134_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24548928)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_32_se_conv2d_BiasAdd_cast = conv(bias = const_134_to_fp16, dilations = efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_32_se_conv2d_Conv2Dx_strides_0, weight = transpose_349_to_fp16, x = efficientnetv2_s_blocks_32_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_32_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_32_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_351_to_fp16 = const()[name = tensor<string, []>("transpose_351_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24549120)))];
            tensor<fp16, [1536]> const_135_to_fp16 = const()[name = tensor<string, []>("const_135_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24745792)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_32_se_conv2d_1_BiasAdd_cast = conv(bias = const_135_to_fp16, dilations = efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_32_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_351_to_fp16, x = efficientnetv2_s_blocks_32_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_32_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_32_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_32_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_32_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_32_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24748928)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25535424)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_32_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_32_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_32_Add_cast = add(x = efficientnetv2_s_blocks_32_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_31_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_33_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_33_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_33_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25536000)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26322496)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_33_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_33_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_33_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_33_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_33_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_32_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_33_mul_1_cast = silu(x = efficientnetv2_s_blocks_33_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_33_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_34_pad_0 = const()[name = tensor<string, []>("pad_34_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_33_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_34_cast = pad(constant_val = efficientnetv2_s_blocks_33_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_33_Pad_mode_0, pad = pad_34_pad_0, x = efficientnetv2_s_blocks_33_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26325632)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26353344)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_33_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_34_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_33_mul_3_cast = silu(x = efficientnetv2_s_blocks_33_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_33_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_69 = const()[name = tensor<string, []>("const_69"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_33_se_Mean_cast = reduce_mean(axes = const_69, keep_dims = efficientnetv2_s_blocks_33_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_33_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_362_to_fp16 = const()[name = tensor<string, []>("transpose_362_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26356480)))];
            tensor<fp16, [64]> const_136_to_fp16 = const()[name = tensor<string, []>("const_136_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26553152)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_33_se_conv2d_BiasAdd_cast = conv(bias = const_136_to_fp16, dilations = efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_33_se_conv2d_Conv2Dx_strides_0, weight = transpose_362_to_fp16, x = efficientnetv2_s_blocks_33_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_33_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_33_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_364_to_fp16 = const()[name = tensor<string, []>("transpose_364_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26553344)))];
            tensor<fp16, [1536]> const_137_to_fp16 = const()[name = tensor<string, []>("const_137_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26750016)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_33_se_conv2d_1_BiasAdd_cast = conv(bias = const_137_to_fp16, dilations = efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_33_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_364_to_fp16, x = efficientnetv2_s_blocks_33_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_33_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_33_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_33_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_33_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_33_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26753152)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27539648)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_33_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_33_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_33_Add_cast = add(x = efficientnetv2_s_blocks_33_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_32_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_34_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_34_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_34_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27540224)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28326720)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_34_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_34_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_34_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_34_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_34_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_33_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_34_mul_1_cast = silu(x = efficientnetv2_s_blocks_34_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_34_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_35_pad_0 = const()[name = tensor<string, []>("pad_35_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_34_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_35_cast = pad(constant_val = efficientnetv2_s_blocks_34_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_34_Pad_mode_0, pad = pad_35_pad_0, x = efficientnetv2_s_blocks_34_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28329856)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28357568)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_34_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_35_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_34_mul_3_cast = silu(x = efficientnetv2_s_blocks_34_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_34_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_72 = const()[name = tensor<string, []>("const_72"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_34_se_Mean_cast = reduce_mean(axes = const_72, keep_dims = efficientnetv2_s_blocks_34_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_34_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_375_to_fp16 = const()[name = tensor<string, []>("transpose_375_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28360704)))];
            tensor<fp16, [64]> const_138_to_fp16 = const()[name = tensor<string, []>("const_138_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28557376)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_34_se_conv2d_BiasAdd_cast = conv(bias = const_138_to_fp16, dilations = efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_34_se_conv2d_Conv2Dx_strides_0, weight = transpose_375_to_fp16, x = efficientnetv2_s_blocks_34_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_34_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_34_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_377_to_fp16 = const()[name = tensor<string, []>("transpose_377_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28557568)))];
            tensor<fp16, [1536]> const_139_to_fp16 = const()[name = tensor<string, []>("const_139_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28754240)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_34_se_conv2d_1_BiasAdd_cast = conv(bias = const_139_to_fp16, dilations = efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_34_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_377_to_fp16, x = efficientnetv2_s_blocks_34_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_34_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_34_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_34_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_34_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_34_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28757376)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29543872)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_34_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_34_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_34_Add_cast = add(x = efficientnetv2_s_blocks_34_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_33_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_35_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_35_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_35_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29544448)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30330944)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_35_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_35_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_35_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_35_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_35_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_34_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_35_mul_1_cast = silu(x = efficientnetv2_s_blocks_35_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_35_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_36_pad_0 = const()[name = tensor<string, []>("pad_36_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_35_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_36_cast = pad(constant_val = efficientnetv2_s_blocks_35_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_35_Pad_mode_0, pad = pad_36_pad_0, x = efficientnetv2_s_blocks_35_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30334080)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30361792)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_35_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_36_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_35_mul_3_cast = silu(x = efficientnetv2_s_blocks_35_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_35_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_75 = const()[name = tensor<string, []>("const_75"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_35_se_Mean_cast = reduce_mean(axes = const_75, keep_dims = efficientnetv2_s_blocks_35_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_35_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_388_to_fp16 = const()[name = tensor<string, []>("transpose_388_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30364928)))];
            tensor<fp16, [64]> const_140_to_fp16 = const()[name = tensor<string, []>("const_140_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30561600)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_35_se_conv2d_BiasAdd_cast = conv(bias = const_140_to_fp16, dilations = efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_35_se_conv2d_Conv2Dx_strides_0, weight = transpose_388_to_fp16, x = efficientnetv2_s_blocks_35_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_35_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_35_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_390_to_fp16 = const()[name = tensor<string, []>("transpose_390_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30561792)))];
            tensor<fp16, [1536]> const_141_to_fp16 = const()[name = tensor<string, []>("const_141_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30758464)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_35_se_conv2d_1_BiasAdd_cast = conv(bias = const_141_to_fp16, dilations = efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_35_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_390_to_fp16, x = efficientnetv2_s_blocks_35_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_35_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_35_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_35_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_35_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_35_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30761600)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31548096)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_35_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_35_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_35_Add_cast = add(x = efficientnetv2_s_blocks_35_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_34_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_36_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_36_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_36_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31548672)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32335168)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_36_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_36_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_36_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_36_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_36_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_35_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_36_mul_1_cast = silu(x = efficientnetv2_s_blocks_36_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_36_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_37_pad_0 = const()[name = tensor<string, []>("pad_37_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_36_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_37_cast = pad(constant_val = efficientnetv2_s_blocks_36_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_36_Pad_mode_0, pad = pad_37_pad_0, x = efficientnetv2_s_blocks_36_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32338304)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32366016)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_36_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_37_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_36_mul_3_cast = silu(x = efficientnetv2_s_blocks_36_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_36_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_78 = const()[name = tensor<string, []>("const_78"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_36_se_Mean_cast = reduce_mean(axes = const_78, keep_dims = efficientnetv2_s_blocks_36_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_36_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_401_to_fp16 = const()[name = tensor<string, []>("transpose_401_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32369152)))];
            tensor<fp16, [64]> const_142_to_fp16 = const()[name = tensor<string, []>("const_142_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32565824)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_36_se_conv2d_BiasAdd_cast = conv(bias = const_142_to_fp16, dilations = efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_36_se_conv2d_Conv2Dx_strides_0, weight = transpose_401_to_fp16, x = efficientnetv2_s_blocks_36_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_36_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_36_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_403_to_fp16 = const()[name = tensor<string, []>("transpose_403_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32566016)))];
            tensor<fp16, [1536]> const_143_to_fp16 = const()[name = tensor<string, []>("const_143_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32762688)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_36_se_conv2d_1_BiasAdd_cast = conv(bias = const_143_to_fp16, dilations = efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_36_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_403_to_fp16, x = efficientnetv2_s_blocks_36_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_36_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_36_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_36_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_36_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_36_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32765824)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33552320)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_36_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_36_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_36_Add_cast = add(x = efficientnetv2_s_blocks_36_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_35_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_37_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_37_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_37_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33552896)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34339392)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_37_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_37_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_37_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_37_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_37_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_36_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_37_mul_1_cast = silu(x = efficientnetv2_s_blocks_37_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_37_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_38_pad_0 = const()[name = tensor<string, []>("pad_38_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_37_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_38_cast = pad(constant_val = efficientnetv2_s_blocks_37_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_37_Pad_mode_0, pad = pad_38_pad_0, x = efficientnetv2_s_blocks_37_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34342528)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34370240)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_37_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_38_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_37_mul_3_cast = silu(x = efficientnetv2_s_blocks_37_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_37_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_81 = const()[name = tensor<string, []>("const_81"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_37_se_Mean_cast = reduce_mean(axes = const_81, keep_dims = efficientnetv2_s_blocks_37_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_37_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_414_to_fp16 = const()[name = tensor<string, []>("transpose_414_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34373376)))];
            tensor<fp16, [64]> const_144_to_fp16 = const()[name = tensor<string, []>("const_144_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34570048)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_37_se_conv2d_BiasAdd_cast = conv(bias = const_144_to_fp16, dilations = efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_37_se_conv2d_Conv2Dx_strides_0, weight = transpose_414_to_fp16, x = efficientnetv2_s_blocks_37_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_37_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_37_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_416_to_fp16 = const()[name = tensor<string, []>("transpose_416_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34570240)))];
            tensor<fp16, [1536]> const_145_to_fp16 = const()[name = tensor<string, []>("const_145_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34766912)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_37_se_conv2d_1_BiasAdd_cast = conv(bias = const_145_to_fp16, dilations = efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_37_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_416_to_fp16, x = efficientnetv2_s_blocks_37_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_37_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_37_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_37_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_37_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_37_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34770048)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35556544)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_37_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_37_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_37_Add_cast = add(x = efficientnetv2_s_blocks_37_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_36_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_38_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_38_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_38_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35557120)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36343616)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_38_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_38_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_38_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_38_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_38_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_37_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_38_mul_1_cast = silu(x = efficientnetv2_s_blocks_38_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_38_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_39_pad_0 = const()[name = tensor<string, []>("pad_39_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_38_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_39_cast = pad(constant_val = efficientnetv2_s_blocks_38_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_38_Pad_mode_0, pad = pad_39_pad_0, x = efficientnetv2_s_blocks_38_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36346752)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36374464)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_38_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_39_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_38_mul_3_cast = silu(x = efficientnetv2_s_blocks_38_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_38_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_84 = const()[name = tensor<string, []>("const_84"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_38_se_Mean_cast = reduce_mean(axes = const_84, keep_dims = efficientnetv2_s_blocks_38_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_38_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_427_to_fp16 = const()[name = tensor<string, []>("transpose_427_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36377600)))];
            tensor<fp16, [64]> const_146_to_fp16 = const()[name = tensor<string, []>("const_146_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36574272)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_38_se_conv2d_BiasAdd_cast = conv(bias = const_146_to_fp16, dilations = efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_38_se_conv2d_Conv2Dx_strides_0, weight = transpose_427_to_fp16, x = efficientnetv2_s_blocks_38_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_38_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_38_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_429_to_fp16 = const()[name = tensor<string, []>("transpose_429_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36574464)))];
            tensor<fp16, [1536]> const_147_to_fp16 = const()[name = tensor<string, []>("const_147_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36771136)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_38_se_conv2d_1_BiasAdd_cast = conv(bias = const_147_to_fp16, dilations = efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_38_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_429_to_fp16, x = efficientnetv2_s_blocks_38_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_38_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_38_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_38_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_38_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_38_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36774272)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37560768)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_38_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_38_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_38_Add_cast = add(x = efficientnetv2_s_blocks_38_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_37_Add_cast);
            tensor<string, []> efficientnetv2_s_blocks_39_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_39_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_39_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 256, 1, 1]> efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37561344)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38347840)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_39_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_39_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_39_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_39_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_39_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_38_Add_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_39_mul_1_cast = silu(x = efficientnetv2_s_blocks_39_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<string, []> efficientnetv2_s_blocks_39_Pad_mode_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_Pad_mode_0"), val = tensor<string, []>("constant")];
            tensor<int32, [8]> pad_40_pad_0 = const()[name = tensor<string, []>("pad_40_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 1, 1, 1, 1])];
            tensor<fp16, []> efficientnetv2_s_blocks_39_Pad_constant_val_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_Pad_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 1536, 10, 10]> pad_40_cast = pad(constant_val = efficientnetv2_s_blocks_39_Pad_constant_val_0_to_fp16, mode = efficientnetv2_s_blocks_39_Pad_mode_0, pad = pad_40_pad_0, x = efficientnetv2_s_blocks_39_mul_1_cast);
            tensor<string, []> efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_groups_0"), val = tensor<int32, []>(1536)];
            tensor<int32, [4]> efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 1, 3, 3]> efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1536, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38350976)))];
            tensor<fp16, [1536]> efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38378688)))];
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_dilations_0, groups = efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_groups_0, pad = efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_pad_0, pad_type = efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_pad_type_0, strides = efficientnetv2_s_blocks_39_depthwise_conv2d_depthwisex_strides_0, weight = efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_weight_0_to_fp16, x = pad_40_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_39_mul_3_cast = silu(x = efficientnetv2_s_blocks_39_tpu_batch_normalization_1_FusedBatchNormV3_nchw_cast);
            tensor<bool, []> efficientnetv2_s_blocks_39_se_Mean_keep_dims_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_Mean_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<int32, [2]> const_87 = const()[name = tensor<string, []>("const_87"), val = tensor<int32, [2]>([2, 3])];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_39_se_Mean_cast = reduce_mean(axes = const_87, keep_dims = efficientnetv2_s_blocks_39_se_Mean_keep_dims_0, x = efficientnetv2_s_blocks_39_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 1536, 1, 1]> transpose_440_to_fp16 = const()[name = tensor<string, []>("transpose_440_to_fp16"), val = tensor<fp16, [64, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38381824)))];
            tensor<fp16, [64]> const_148_to_fp16 = const()[name = tensor<string, []>("const_148_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38578496)))];
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_39_se_conv2d_BiasAdd_cast = conv(bias = const_148_to_fp16, dilations = efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_39_se_conv2d_Conv2Dx_strides_0, weight = transpose_440_to_fp16, x = efficientnetv2_s_blocks_39_se_Mean_cast);
            tensor<fp16, [1, 64, 1, 1]> efficientnetv2_s_blocks_39_se_mul_1_cast = silu(x = efficientnetv2_s_blocks_39_se_conv2d_BiasAdd_cast);
            tensor<string, []> efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1536, 64, 1, 1]> transpose_442_to_fp16 = const()[name = tensor<string, []>("transpose_442_to_fp16"), val = tensor<fp16, [1536, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38578688)))];
            tensor<fp16, [1536]> const_149_to_fp16 = const()[name = tensor<string, []>("const_149_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38775360)))];
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_39_se_conv2d_1_BiasAdd_cast = conv(bias = const_149_to_fp16, dilations = efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_39_se_conv2d_1_Conv2Dx_strides_0, weight = transpose_442_to_fp16, x = efficientnetv2_s_blocks_39_se_mul_1_cast);
            tensor<fp16, [1, 1536, 1, 1]> efficientnetv2_s_blocks_39_se_Sigmoid_1_cast = sigmoid(x = efficientnetv2_s_blocks_39_se_conv2d_1_BiasAdd_cast);
            tensor<fp16, [1, 1536, 8, 8]> efficientnetv2_s_blocks_39_se_mul_2_cast = mul(x = efficientnetv2_s_blocks_39_se_Sigmoid_1_cast, y = efficientnetv2_s_blocks_39_mul_3_cast);
            tensor<string, []> efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 1536, 1, 1]> efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [256, 1536, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38778496)))];
            tensor<fp16, [256]> efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39564992)))];
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_dilations_0, groups = efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_groups_0, pad = efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_pad_0, pad_type = efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_pad_type_0, strides = efficientnetv2_s_blocks_39_conv2d_1_Conv2Dx_strides_0, weight = efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_39_se_mul_2_cast);
            tensor<fp16, [1, 256, 8, 8]> efficientnetv2_s_blocks_39_Add_cast = add(x = efficientnetv2_s_blocks_39_tpu_batch_normalization_2_FusedBatchNormV3_nchw_cast, y = efficientnetv2_s_blocks_38_Add_cast);
            tensor<string, []> efficientnetv2_s_head_conv2d_Conv2Dx_pad_type_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_conv2d_Conv2Dx_pad_type_0"), val = tensor<string, []>("same")];
            tensor<int32, [2]> efficientnetv2_s_head_conv2d_Conv2Dx_strides_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_conv2d_Conv2Dx_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> efficientnetv2_s_head_conv2d_Conv2Dx_dilations_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_conv2d_Conv2Dx_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> efficientnetv2_s_head_conv2d_Conv2Dx_groups_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_conv2d_Conv2Dx_groups_0"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> efficientnetv2_s_head_conv2d_Conv2Dx_pad_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_conv2d_Conv2Dx_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 256, 1, 1]> efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16"), val = tensor<fp16, [1280, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39565568)))];
            tensor<fp16, [1280]> efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16 = const()[name = tensor<string, []>("efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40220992)))];
            tensor<fp16, [1, 1280, 8, 8]> efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_cast = conv(bias = efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_bias_0_to_fp16, dilations = efficientnetv2_s_head_conv2d_Conv2Dx_dilations_0, groups = efficientnetv2_s_head_conv2d_Conv2Dx_groups_0, pad = efficientnetv2_s_head_conv2d_Conv2Dx_pad_0, pad_type = efficientnetv2_s_head_conv2d_Conv2Dx_pad_type_0, strides = efficientnetv2_s_head_conv2d_Conv2Dx_strides_0, weight = efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_weight_0_to_fp16, x = efficientnetv2_s_blocks_39_Add_cast);
            tensor<int32, [4]> efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_perm_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_perm_0"), val = tensor<int32, [4]>([0, 2, 3, 1])];
            tensor<fp16, [1, 8, 8, 1280]> transpose_491 = transpose(perm = efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_perm_0, x = efficientnetv2_s_head_tpu_batch_normalization_FusedBatchNormV3_nchw_cast);
            tensor<fp16, [1, 8, 8, 1280]> efficientnetv2_s_head_mul_1_cast = silu(x = transpose_491);
            tensor<string, []> efficientnetv2_s_head_mul_1_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("efficientnetv2_s_head_mul_1_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 8, 8, 1280]> Identity = cast(dtype = efficientnetv2_s_head_mul_1_cast_to_fp32_dtype_0, x = efficientnetv2_s_head_mul_1_cast);
        } -> (Identity);
}